// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/user2410/rrms-backend/internal/domain/storage (interfaces: Storage)
//
// Generated by this command:
//
//	mockgen -package storage -destination internal/domain/storage/storage_mock.go github.com/user2410/rrms-backend/internal/domain/storage Storage
//

// Package storage is a generated GoMock package.
package storage

import (
	reflect "reflect"
	time "time"

	dto "github.com/user2410/rrms-backend/internal/domain/storage/dto"
	object "github.com/user2410/rrms-backend/internal/domain/storage/object"
	gomock "go.uber.org/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetPutObjectPresignURL mocks base method.
func (m *MockStorage) GetPutObjectPresignURL(arg0 *dto.PutObjectPresignRequest, arg1 time.Duration) (*object.PresignURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPutObjectPresignURL", arg0, arg1)
	ret0, _ := ret[0].(*object.PresignURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPutObjectPresignURL indicates an expected call of GetPutObjectPresignURL.
func (mr *MockStorageMockRecorder) GetPutObjectPresignURL(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPutObjectPresignURL", reflect.TypeOf((*MockStorage)(nil).GetPutObjectPresignURL), arg0, arg1)
}
